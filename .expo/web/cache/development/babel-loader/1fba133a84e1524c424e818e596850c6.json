{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/ikramgabiyev/react-native-workspace/loundr/components/CustomScrollView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nvar MyProfileScreen = function MyProfileScreen(props) {\n  return React.createElement(KeyboardAwareScrollView, {\n    extraHeight: props.keyboardVerticalOffset || 0,\n    style: {\n      backgroundColor: props.backgroundColor\n    },\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 2\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.inner), props.style),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, props.children)));\n};\n\nvar styles = StyleSheet.create({\n  inner: {\n    flex: 1\n  }\n});\nexport default MyProfileScreen;","map":{"version":3,"sources":["/Users/ikramgabiyev/react-native-workspace/loundr/components/CustomScrollView.js"],"names":["React","KeyboardAwareScrollView","MyProfileScreen","props","keyboardVerticalOffset","backgroundColor","flexGrow","Keyboard","dismiss","styles","inner","style","children","StyleSheet","create","flex"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAIA,SAASC,uBAAT,QAAwC,yCAAxC;;AAUA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAIvB,oBAAC,uBAAD;AACO,IAAA,WAAW,EAAEA,KAAK,CAACC,sBAAN,IAAgC,CADpD;AAEO,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEF,KAAK,CAACE;AAAzB,KAFd;AAGO,IAAA,qBAAqB,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMC,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEC,QAAQ,CAACC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOC,MAAM,CAACC,KAAd,GAAwBP,KAAK,CAACQ,KAA9B,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACcR,KAAK,CAACS,QADpB,CADD,CAND,CAJuB;AAAA,CAAxB;;AAmBA,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAChCJ,EAAAA,KAAK,EAAE;AACNK,IAAAA,IAAI,EAAE;AADA;AADyB,CAAlB,CAAf;AAMA,eAAeb,eAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, TouchableWithoutFeedback, Keyboard } from 'react-native';\n\n//imports from outside\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\n/**\n * A ScrollView that is aware of keyboard and easy to use.\n * Props are:\n * @backgroundColor of the screen,\n * @style of the \"inner\" view,\n * @keyboardVerticalOffset distance from the covered input to keyboard (rough).\n * @param {*} props \n */\nconst MyProfileScreen = (props) => (\n\t// ****** IT IS IMPORTANT TO HAVE flexGrow: 1 HERE ******\n    //do extraHeight={200} if need extra offset from keyboard\n    \n\t<KeyboardAwareScrollView \n        extraHeight={props.keyboardVerticalOffset || 0}\n        style={{ backgroundColor: props.backgroundColor }} \n        contentContainerStyle={{ flexGrow: 1 }}>\n\n\t\t{/* Allows to dismiss keyboard when screen is clicked */}\n\t\t<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n\t\t\t<View style={{ ...styles.inner, ...props.style}}>\n                {props.children}\n            </View>\n\t\t</TouchableWithoutFeedback>\n\n\t</KeyboardAwareScrollView>\n);\n\nconst styles = StyleSheet.create({\n\tinner: {\n\t\tflex: 1,\n\t},\n});\n\nexport default MyProfileScreen;\n"]},"metadata":{},"sourceType":"module"}