{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ikramgabiyev/react-native-workspace/loundr/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport EntryNavigator from \"./navigation/EntryNavigator\";\nimport { AppLoading } from 'expo';\nimport * as Font from 'expo-font';\nimport * as firebase from 'firebase';\nimport firebaseConfig from \"./Firebase\";\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    'mont-alt-regular': require(\"./assets/fonts/MontserratAlternates-Regular.ttf\"),\n    'mont-alt-medium': require(\"./assets/fonts/MontserratAlternates-Medium.ttf\"),\n    'mont-alt-bold': require(\"./assets/fonts/MontserratAlternates-Bold.ttf\")\n  });\n};\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fontsLoaded: false\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.fontsLoaded) {\n        return React.createElement(AppLoading, {\n          startAsync: fetchFonts,\n          onFinish: function onFinish() {\n            return _this2.setState({\n              fontsLoaded: true\n            });\n          },\n          onError: console.warn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 5\n          }\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(EntryNavigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }\n      }), React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default App;","map":{"version":3,"sources":["/Users/ikramgabiyev/react-native-workspace/loundr/App.js"],"names":["React","Component","EntryNavigator","AppLoading","Font","firebase","firebaseConfig","fetchFonts","loadAsync","require","App","props","state","fontsLoaded","apps","length","initializeApp","setState","console","warn","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAIA,OAAOC,cAAP;AAIA,SAASC,UAAT,QAA2B,MAA3B;AAGA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAGA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,cAAP;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACxB,SAAOH,IAAI,CAACI,SAAL,CAAe;AAErB,wBAAoBC,OAAO,mDAFN;AAKrB,uBAAmBA,OAAO,kDALL;AAQrB,qBAAiBA,OAAO;AARH,GAAf,CAAP;AAUA,CAXD;;IAiBMC,G;;;;;AACF,eAAYC,KAAZ,EACA;AAAA;;AAAA;;AACI,8BAAMA,KAAN;AADJ,UASHC,KATG,GASK;AAEDC,MAAAA,WAAW,EAAE;AAFZ,KATL;;AAGI,QAAI,CAACR,QAAQ,CAACS,IAAT,CAAcC,MAAnB,EACA;AACIV,MAAAA,QAAQ,CAACW,aAAT,CAAuBV,cAAvB;AACH;;AANL;AAOC;;;;6BAOK;AAAA;;AAKR,UAAI,CAAC,KAAKM,KAAL,CAAWC,WAAhB,EAA6B;AAC5B,eACC,oBAAC,UAAD;AACC,UAAA,UAAU,EAAEN,UADb;AAEC,UAAA,QAAQ,EAAE;AAAA,mBAAM,MAAI,CAACU,QAAL,CAAc;AAAEJ,cAAAA,WAAW,EAAE;AAAf,aAAd,CAAN;AAAA,WAFX;AAGC,UAAA,OAAO,EAAEK,OAAO,CAACC,IAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;;AAED,aACC,0CACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADD;AAMA;;;;EArCgBlB,S;;AAwClB,IAAMmB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE,MAFP;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AADqB,CAAlB,CAAf;AASA,eAAejB,GAAf","sourcesContent":["//standard imports\nimport React, { Component } from 'react';\nimport { StyleSheet, StatusBar } from 'react-native';\n\n//importing the entry navigator\nimport EntryNavigator from './navigation/EntryNavigator';\n\n//importing AppLoading\n//currently for uploading files in the render() in [App.js]\nimport { AppLoading } from 'expo';\n\n//importing font package\nimport * as Font from 'expo-font'\n\n//importing firebase configg object\nimport * as firebase from 'firebase'; // firebase itself\nimport firebaseConfig from './Firebase';\n\n/**\n * fetches all fonts;\n * returns a promise;\n * put as a prop into AppLoading component\n */\nconst fetchFonts = () => {\n\treturn Font.loadAsync({\n\t\t//use this mostly\n\t\t'mont-alt-regular': require('./assets/fonts/MontserratAlternates-Regular.ttf'),\n\n\t\t//use this for subTitles or when regular is too thin\n\t\t'mont-alt-medium': require('./assets/fonts/MontserratAlternates-Medium.ttf'),\n\n\t\t//use this for titles\n\t\t'mont-alt-bold': require('./assets/fonts/MontserratAlternates-Bold.ttf'),\n\t});\n};\n\n\n/**\n * Here we will have the main SwitchNavigator rendered\n */\nclass App extends Component {\n    constructor(props) \n    {\n        super(props);\n\n        if (!firebase.apps.length)\n        {\n            firebase.initializeApp(firebaseConfig);\n        }\n    }\n\n\tstate = {\n\t\t//checks if fonts loaded\n        fontsLoaded: false,\n\t};\n\n\trender() {\n\t\t/**\n\t\t * render AppLoading screen if\n\t\t * fonts are still not loaded\n\t\t */\n\t\tif (!this.state.fontsLoaded) {\n\t\t\treturn (\n\t\t\t\t<AppLoading\n\t\t\t\t\tstartAsync={fetchFonts}\n\t\t\t\t\tonFinish={() => this.setState({ fontsLoaded: true })}\n\t\t\t\t\tonError={console.warn}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EntryNavigator />\n\t\t\t\t<StatusBar barStyle=\"light-content\" />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}