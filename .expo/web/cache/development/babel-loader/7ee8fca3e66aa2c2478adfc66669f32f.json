{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ikramgabiyev/react-native-workspace/loundr/screens/Authentication/SignUp/SignUpScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport * as firebase from 'firebase';\nimport Colors from \"../../../constants/colors\";\nimport FontSizes from \"../../../constants/fontSizes\";\nimport checkEmail from \"../../../constants/checkEmail\";\nvar MIN_PASS_LENGTH = 8;\nimport SignInLogo from \"../../../components/Auth/SignInLogo\";\nimport CredInput from \"../../../components/Auth/CredInput\";\nimport SubmitButton from \"../../../components/SubmitButton\";\nimport MinorButton from \"../../../components/MinorButton\";\nimport ErrorMessage from \"../../../components/Auth/ErrorMessage\";\n\nvar SignInScreen = function (_Component) {\n  _inherits(SignInScreen, _Component);\n\n  var _super = _createSuper(SignInScreen);\n\n  function SignInScreen() {\n    var _this;\n\n    _classCallCheck(this, SignInScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      hasIncorrectCredentials: false,\n      userInputs: {\n        name: '',\n        surname: '',\n        email: '',\n        username: '',\n        password: '',\n        confirmPass: ''\n      }\n    };\n\n    _this.onChangeInput = function (inputName, value) {\n      _this.setState(function (prevState) {\n        var inputsCopy = _objectSpread({}, prevState.userInputs);\n\n        inputsCopy[inputName] = value;\n        return {\n          userInputs: inputsCopy\n        };\n      });\n    };\n\n    _this.onSignUp = function () {\n      Object.keys(_this.state.userInputs).forEach(function (key) {\n        if (!_this.state.userInputs[key]) {\n          return;\n        }\n      });\n\n      if (!checkEmail(_this.state.userInputs.email)) {\n        return;\n      }\n\n      if (_this.state.userInputs.password.length < MIN_PASS_LENGTH) {\n        return;\n      }\n\n      if (_this.state.userInputs.password !== _this.state.userInputs.confirmPass) {\n        return;\n      }\n\n      firebase.auth().createUserWithEmailAndPassword(_this.state.userInputs.email, _this.state.userInputs.password).then(function () {\n        var user = firebase.auth().currentUser;\n        return user.updateProfile({\n          displayName: _this.state.userInputs.name + ' ' + _this.state.userInputs.surname\n        });\n      }).then(function () {\n        if (!firebase.auth().currentUser.emailVerified) {\n          return firebase.auth().currentUser.sendEmailVerification();\n        }\n      }).then(function () {\n        return _this.setState({\n          hasIncorrectCredentials: false\n        });\n      }).then(function () {\n        _this.props.navigation.navigate('ConfirmEmail');\n      }).catch(function (err) {\n        _this.setState({\n          hasIncorrectCredentials: true\n        });\n      });\n    };\n\n    _this.onSignInNavigate = function () {\n      _this.props.navigation.navigate('SignIn');\n    };\n\n    return _this;\n  }\n\n  _createClass(SignInScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var overallErrorMessage = null;\n      Object.keys(this.state.userInputs).forEach(function (key) {\n        if (!_this2.state.userInputs[key]) {\n          overallErrorMessage = React.createElement(ErrorMessage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 27\n            }\n          }, \"You must fill in all of the fields\");\n        }\n      });\n      return React.createElement(KeyboardAwareScrollView, {\n        style: styles.container,\n        contentContainerStyle: {\n          flexGrow: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 4\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: Keyboard.dismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.inner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }\n      }, React.createElement(SignInLogo, {\n        style: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: styles.loginContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }\n      }, this.state.hasIncorrectCredentials ? React.createElement(ErrorMessage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 67\n        }\n      }, \"A user with this email already exists\") : null, overallErrorMessage, React.createElement(CredInput, {\n        onChangeText: function onChangeText(name) {\n          return _this2.onChangeInput('name', name);\n        },\n        value: this.state.userInputs.name,\n        style: styles.input,\n        placeholder: \"name...\",\n        autoCompleteType: \"name\",\n        secureTextEntry: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 8\n        }\n      }), React.createElement(CredInput, {\n        onChangeText: function onChangeText(surname) {\n          return _this2.onChangeInput('surname', surname);\n        },\n        value: this.state.userInputs.surname,\n        style: styles.input,\n        placeholder: \"surname...\",\n        autoCompleteType: \"name\",\n        secureTextEntry: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 8\n        }\n      }), checkEmail(this.state.userInputs.email) ? null : React.createElement(ErrorMessage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      }, \"Invalid email form\"), React.createElement(CredInput, {\n        onChangeText: function onChangeText(email) {\n          return _this2.onChangeInput('email', email);\n        },\n        value: this.state.userInputs.email,\n        style: styles.input,\n        placeholder: \"email...\",\n        autoCompleteType: \"email\",\n        secureTextEntry: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 8\n        }\n      }), React.createElement(CredInput, {\n        onChangeText: function onChangeText(username) {\n          return _this2.onChangeInput('username', username);\n        },\n        value: this.state.userInputs.username,\n        style: styles.input,\n        placeholder: \"username...\",\n        autoCompleteType: \"username\",\n        secureTextEntry: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 8\n        }\n      }), this.state.userInputs.password.length < MIN_PASS_LENGTH ? React.createElement(ErrorMessage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, \"Password must be at least \", MIN_PASS_LENGTH, \" characters long\") : null, React.createElement(CredInput, {\n        onChangeText: function onChangeText(password) {\n          return _this2.onChangeInput('password', password);\n        },\n        value: this.state.userInputs.password,\n        style: styles.input,\n        placeholder: \"password...\",\n        autoCompleteType: \"password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 8\n        }\n      }), this.state.userInputs.password !== this.state.userInputs.confirmPass ? React.createElement(ErrorMessage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }\n      }, \"Passwords do not match\") : null, React.createElement(CredInput, {\n        onChangeText: function onChangeText(confirmPass) {\n          return _this2.onChangeInput('confirmPass', confirmPass);\n        },\n        value: this.state.userInputs.confirmPass,\n        style: styles.input,\n        placeholder: \"confirm password...\",\n        autoCompleteType: \"password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 8\n        }\n      }), React.createElement(SubmitButton, {\n        style: styles.submitBtn,\n        title: \"Sign Up\",\n        backgroundColor: Colors.btnColor,\n        onPress: this.onSignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 8\n        }\n      }), React.createElement(Text, {\n        style: styles.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 8\n        }\n      }, \"Already have an account?\"), React.createElement(MinorButton, {\n        title: \"Sign In\",\n        color: Colors.btnColor,\n        style: styles.minorBtn,\n        onPress: this.onSignInNavigate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 8\n        }\n      })))));\n    }\n  }]);\n\n  return SignInScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.logoColor\n  },\n  inner: {\n    flex: 1,\n    padding: 24,\n    alignItems: 'center'\n  },\n  logo: {\n    marginVertical: 50\n  },\n  loginContainer: {\n    width: '82%',\n    alignItems: 'center'\n  },\n  input: {\n    marginVertical: 15\n  },\n  submitBtn: {\n    marginVertical: 15\n  },\n  question: {\n    color: Colors.customWhite,\n    fontSize: FontSizes.minorText,\n    fontFamily: 'mont-alt-regular'\n  },\n  minorBtn: {\n    marginVertical: 15\n  }\n});\nexport default SignInScreen;","map":{"version":3,"sources":["/Users/ikramgabiyev/react-native-workspace/loundr/screens/Authentication/SignUp/SignUpScreen.js"],"names":["React","Component","KeyboardAwareScrollView","firebase","Colors","FontSizes","checkEmail","MIN_PASS_LENGTH","SignInLogo","CredInput","SubmitButton","MinorButton","ErrorMessage","SignInScreen","state","hasIncorrectCredentials","userInputs","name","surname","email","username","password","confirmPass","onChangeInput","inputName","value","setState","prevState","inputsCopy","onSignUp","Object","keys","forEach","key","length","auth","createUserWithEmailAndPassword","then","user","currentUser","updateProfile","displayName","emailVerified","sendEmailVerification","props","navigation","navigate","catch","err","onSignInNavigate","overallErrorMessage","styles","container","flexGrow","Keyboard","dismiss","inner","logo","loginContainer","input","submitBtn","btnColor","question","minorBtn","StyleSheet","create","backgroundColor","logoColor","flex","padding","alignItems","marginVertical","width","color","customWhite","fontSize","minorText","fontFamily"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, Text, TouchableWithoutFeedback, Keyboard } from 'react-native';\n\n//imports from outside\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\n//firebase stuff\nimport * as firebase from 'firebase';\n\n//constants\nimport Colors from '../../../constants/colors';\nimport FontSizes from '../../../constants/fontSizes';\nimport checkEmail from '../../../constants/checkEmail';\n\nconst MIN_PASS_LENGTH = 8;\n\n//components\nimport SignInLogo from '../../../components/Auth/SignInLogo';\nimport CredInput from '../../../components/Auth/CredInput';\nimport SubmitButton from '../../../components/SubmitButton';\nimport MinorButton from '../../../components/MinorButton';\nimport ErrorMessage from '../../../components/Auth/ErrorMessage';\n\nclass SignInScreen extends Component {\n\tstate = {\n        hasIncorrectCredentials: false,\n\t\t//contains the values entered in the input fields\n\t\tuserInputs: {\n\t\t\tname: '',\n\t\t\tsurname: '',\n\t\t\temail: '',\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPass: '',\n\t\t},\n\t};\n\n\t/**\n\t * updates the state by changing the\n\t * input the user entered\n\t * @param {*} inputName - the key of the field\n\t * @param {*} value - the value of the field\n\t */\n\tonChangeInput = (inputName, value) => {\n\t\tthis.setState((prevState) => {\n\t\t\tconst inputsCopy = { ...prevState.userInputs };\n\t\t\tinputsCopy[inputName] = value;\n\n\t\t\treturn {\n\t\t\t\tuserInputs: inputsCopy,\n\t\t\t};\n\t\t});\n\t};\n\n\t/**\n\t * called when \"Sign Up\" is clicked\n\t */\n\tonSignUp = () => {\n\t\t/**\n\t\t * Final check of entries\n\t\t */\n\t\t//if any of the fields are empty\n\t\tObject.keys(this.state.userInputs).forEach((key) => {\n\t\t\tif (!this.state.userInputs[key]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t\t//if email has a wrong form\n\t\tif (!checkEmail(this.state.userInputs.email)) {\n\t\t\treturn;\n\t\t}\n\t\t//if the password length is less than minimum allowed\n\t\tif (this.state.userInputs.password.length < MIN_PASS_LENGTH) {\n\t\t\treturn;\n\t\t}\n\t\t//if passwords do not match\n\t\tif (this.state.userInputs.password !== this.state.userInputs.confirmPass) {\n\t\t\treturn;\n\t\t}\n\n\t\t//adding this user to firebase authentification\n\t\tfirebase\n\t\t\t.auth()\n            .createUserWithEmailAndPassword(this.state.userInputs.email, this.state.userInputs.password)\n\t\t\t.then(() => {\n                const user = firebase.auth().currentUser;\n                return user.updateProfile({\n                    displayName: this.state.userInputs.name + ' ' + this.state.userInputs.surname,\n                });\n            })\n            .then(() => {\n                if (!firebase.auth().currentUser.emailVerified)\n                {\n                    return firebase.auth().currentUser.sendEmailVerification();\n                }\n            })\n            .then(() => {\n                return this.setState({\n                    hasIncorrectCredentials: false,\n                });\n            })\n            .then(() => {\n                this.props.navigation.navigate('ConfirmEmail');\n            })\n\t\t\t.catch((err) => {\n                this.setState({\n                    hasIncorrectCredentials: true,\n                });\n            });\n\t};\n\n\t/**\n\t * navigating to sign up page\n\t */\n\tonSignInNavigate = () => {\n\t\tthis.props.navigation.navigate('SignIn');\n\t};\n\n\trender() {\n\t\t// a message to return if some fields are empty\n\t\tlet overallErrorMessage = null;\n\n\t\tObject.keys(this.state.userInputs).forEach((key) => {\n\t\t\tif (!this.state.userInputs[key]) {\n\t\t\t\toverallErrorMessage = <ErrorMessage>You must fill in all of the fields</ErrorMessage>;\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t// ****** IT IS IMPORTANT TO HAVE flexGrow: 1 HERE ******\n\t\t\t//do extraHeight={200} if need extra offset from keyboard\n\t\t\t<KeyboardAwareScrollView style={styles.container} contentContainerStyle={{ flexGrow: 1 }}>\n\t\t\t\t{/* Allows to dismiss keyboard when screen is clicked */}\n\t\t\t\t<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n\t\t\t\t\t<View style={styles.inner}>\n\t\t\t\t\t\t<SignInLogo style={styles.logo} />\n\t\t\t\t\t\t<View style={styles.loginContainer}>\n\n                            {this.state.hasIncorrectCredentials ? <ErrorMessage>A user with this email already exists</ErrorMessage> : null}\n\n\t\t\t\t\t\t\t{/* Checking if any fields are empty */}\n\t\t\t\t\t\t\t{overallErrorMessage}\n\n\t\t\t\t\t\t\t{/* Input Fields */}\n\t\t\t\t\t\t\t<CredInput\n\t\t\t\t\t\t\t\tonChangeText={(name) => this.onChangeInput('name', name)}\n\t\t\t\t\t\t\t\tvalue={this.state.userInputs.name}\n\t\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\t\tplaceholder=\"name...\"\n\t\t\t\t\t\t\t\tautoCompleteType=\"name\"\n\t\t\t\t\t\t\t\tsecureTextEntry={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CredInput\n\t\t\t\t\t\t\t\tonChangeText={(surname) => this.onChangeInput('surname', surname)}\n\t\t\t\t\t\t\t\tvalue={this.state.userInputs.surname}\n\t\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\t\tplaceholder=\"surname...\"\n\t\t\t\t\t\t\t\tautoCompleteType=\"name\"\n\t\t\t\t\t\t\t\tsecureTextEntry={false}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* Checking Email's form */}\n\t\t\t\t\t\t\t{checkEmail(this.state.userInputs.email) ? null : (\n\t\t\t\t\t\t\t\t<ErrorMessage>Invalid email form</ErrorMessage>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<CredInput\n\t\t\t\t\t\t\t\tonChangeText={(email) => this.onChangeInput('email', email)}\n\t\t\t\t\t\t\t\tvalue={this.state.userInputs.email}\n\t\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\t\tplaceholder=\"email...\"\n\t\t\t\t\t\t\t\tautoCompleteType=\"email\"\n\t\t\t\t\t\t\t\tsecureTextEntry={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CredInput\n\t\t\t\t\t\t\t\tonChangeText={(username) => this.onChangeInput('username', username)}\n\t\t\t\t\t\t\t\tvalue={this.state.userInputs.username}\n\t\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\t\tplaceholder=\"username...\"\n\t\t\t\t\t\t\t\tautoCompleteType=\"username\"\n\t\t\t\t\t\t\t\tsecureTextEntry={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* Password Potential Error Message */}\n\t\t\t\t\t\t\t{this.state.userInputs.password.length < MIN_PASS_LENGTH ? (\n\t\t\t\t\t\t\t\t<ErrorMessage>Password must be at least {MIN_PASS_LENGTH} characters long</ErrorMessage>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t\t<CredInput\n\t\t\t\t\t\t\t\tonChangeText={(password) => this.onChangeInput('password', password)}\n\t\t\t\t\t\t\t\tvalue={this.state.userInputs.password}\n\t\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\t\tplaceholder=\"password...\"\n\t\t\t\t\t\t\t\tautoCompleteType=\"password\"\n\t\t\t\t\t\t\t\tsecureTextEntry={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* Confirm Pass Potential Error Message */}\n\t\t\t\t\t\t\t{this.state.userInputs.password !== this.state.userInputs.confirmPass ? (\n\t\t\t\t\t\t\t\t<ErrorMessage>Passwords do not match</ErrorMessage>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t\t<CredInput\n\t\t\t\t\t\t\t\tonChangeText={(confirmPass) => this.onChangeInput('confirmPass', confirmPass)}\n\t\t\t\t\t\t\t\tvalue={this.state.userInputs.confirmPass}\n\t\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\t\tplaceholder=\"confirm password...\"\n\t\t\t\t\t\t\t\tautoCompleteType=\"password\"\n\t\t\t\t\t\t\t\tsecureTextEntry={true}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* Signing Up */}\n\t\t\t\t\t\t\t<SubmitButton\n\t\t\t\t\t\t\t\tstyle={styles.submitBtn}\n\t\t\t\t\t\t\t\ttitle=\"Sign Up\"\n\t\t\t\t\t\t\t\tbackgroundColor={Colors.btnColor}\n\t\t\t\t\t\t\t\tonPress={this.onSignUp}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* Go to Sign In Page */}\n\t\t\t\t\t\t\t<Text style={styles.question}>Already have an account?</Text>\n\t\t\t\t\t\t\t<MinorButton\n\t\t\t\t\t\t\t\ttitle=\"Sign In\"\n\t\t\t\t\t\t\t\tcolor={Colors.btnColor}\n\t\t\t\t\t\t\t\tstyle={styles.minorBtn}\n\t\t\t\t\t\t\t\tonPress={this.onSignInNavigate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t</KeyboardAwareScrollView>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tbackgroundColor: Colors.logoColor,\n\t},\n\tinner: {\n\t\tflex: 1,\n\t\tpadding: 24,\n\t\talignItems: 'center',\n\t},\n\tlogo: {\n\t\tmarginVertical: 50,\n\t},\n\tloginContainer: {\n\t\twidth: '82%',\n\t\talignItems: 'center',\n\t},\n\tinput: {\n\t\tmarginVertical: 15,\n\t},\n\tsubmitBtn: {\n\t\tmarginVertical: 15,\n\t},\n\tquestion: {\n\t\tcolor: Colors.customWhite,\n\t\tfontSize: FontSizes.minorText,\n\t\tfontFamily: 'mont-alt-regular',\n\t},\n\tminorBtn: {\n\t\tmarginVertical: 15,\n\t},\n});\n\nexport default SignInScreen;\n"]},"metadata":{},"sourceType":"module"}