{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/ikramgabiyev/react-native-workspace/loundr/components/OptionsButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport Colors from \"../constants/colors\";\nimport FontSizes from \"../constants/fontSizes\";\n\nvar OptionsButton = function OptionsButton(props) {\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    onPress: props.onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 2\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.iconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }\n  }, React.createElement(FontAwesome, {\n    name: props.iconName,\n    size: FontSizes.tabIcon,\n    color: Colors.placeHolderColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  })), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.titleContainer), {}, {\n      borderBottomWidth: props.isLast ? 0 : 1\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, props.title), React.createElement(FontAwesome, {\n    name: \"angle-right\",\n    size: FontSizes.tabIcon,\n    color: Colors.placeHolderColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    flexDirection: 'row'\n  },\n  iconContainer: {\n    width: '15%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 13\n  },\n  titleContainer: {\n    width: '85%',\n    justifyContent: 'space-between',\n    flexDirection: \"row\",\n    alignItems: 'center',\n    borderBottomColor: Colors.placeHolderColor,\n    paddingVertical: 13,\n    paddingRight: 20\n  },\n  title: {\n    fontFamily: 'mont-alt-regular',\n    color: Colors.customBlack,\n    fontSize: FontSizes.credText\n  }\n});\nexport default OptionsButton;","map":{"version":3,"sources":["/Users/ikramgabiyev/react-native-workspace/loundr/components/OptionsButton.js"],"names":["React","FontAwesome","Colors","FontSizes","OptionsButton","props","onPress","styles","container","iconContainer","iconName","tabIcon","placeHolderColor","titleContainer","borderBottomWidth","isLast","title","StyleSheet","create","width","flexDirection","justifyContent","alignItems","paddingVertical","borderBottomColor","paddingRight","fontFamily","color","customBlack","fontSize","credText"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AAGA,OAAOC,MAAP;AACA,OAAOC,SAAP;;AAWA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SACrB,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAE,GAAjC;AAAsC,IAAA,OAAO,EAAEA,KAAK,CAACC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEJ,KAAK,CAACK,QAAzB;AAAmC,IAAA,IAAI,EAAEP,SAAS,CAACQ,OAAnD;AAA4D,IAAA,KAAK,EAAET,MAAM,CAACU,gBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,EAIC,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOL,MAAM,CAACM,cAAd;AAA8BC,MAAAA,iBAAiB,EAAET,KAAK,CAACU,MAAN,GAAe,CAAf,GAAmB;AAApE,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BX,KAAK,CAACW,KAAlC,CADD,EAEa,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,aAAlB;AAAgC,IAAA,IAAI,EAAEb,SAAS,CAACQ,OAAhD;AAAyD,IAAA,KAAK,EAAET,MAAM,CAACU,gBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFb,CAJD,CADD,CADqB;AAAA,CAAtB;;AAcA,IAAML,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAE;AACPW,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,aAAa,EAAE;AAFR,GADkB;AAK7BX,EAAAA,aAAa,EAAE;AACXU,IAAAA,KAAK,EAAE,KADI;AAEXE,IAAAA,cAAc,EAAE,QAFL;AAGXC,IAAAA,UAAU,EAAE,QAHD;AAIXC,IAAAA,eAAe,EAAE;AAJN,GALc;AAW7BV,EAAAA,cAAc,EAAE;AACZM,IAAAA,KAAK,EAAE,KADK;AAEZE,IAAAA,cAAc,EAAE,eAFJ;AAGZD,IAAAA,aAAa,EAAE,KAHH;AAIZE,IAAAA,UAAU,EAAE,QAJA;AAKZE,IAAAA,iBAAiB,EAAEtB,MAAM,CAACU,gBALd;AAMZW,IAAAA,eAAe,EAAE,EANL;AAOZE,IAAAA,YAAY,EAAE;AAPF,GAXa;AAoBhCT,EAAAA,KAAK,EAAE;AACNU,IAAAA,UAAU,EAAE,kBADN;AAENC,IAAAA,KAAK,EAAEzB,MAAM,CAAC0B,WAFR;AAGNC,IAAAA,QAAQ,EAAE1B,SAAS,CAAC2B;AAHd;AApByB,CAAlB,CAAf;AA2BA,eAAe1B,aAAf","sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\n\n//constants\nimport Colors from '../constants/colors';\nimport FontSizes from '../constants/fontSizes';\n\n/**\n * A button that can be used in settings e.g.\n * Needs props:\n * @iconName - FontAwesome name of the icon\n * @title - the title of the button\n * @isLast - boolean, shows the last item in the list\n * @onPress - function\n * @param {*} props \n */\nconst OptionsButton = (props) => (\n\t<TouchableOpacity activeOpacity={0.5} onPress={props.onPress} >\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.iconContainer} >\n\t\t\t\t<FontAwesome name={props.iconName} size={FontSizes.tabIcon} color={Colors.placeHolderColor} />\n\t\t\t</View>\n\t\t\t<View style={{ ...styles.titleContainer, borderBottomWidth: props.isLast ? 0 : 1 }} >\n\t\t\t\t<Text style={styles.title}>{props.title}</Text>\n                <FontAwesome name=\"angle-right\" size={FontSizes.tabIcon} color={Colors.placeHolderColor} />\n\t\t\t</View>\n\t\t</View>\n\t</TouchableOpacity>\n);\n\nconst styles = StyleSheet.create({\n    container: {\n        width: '100%',\n        flexDirection: 'row'\n    },\n    iconContainer: {\n        width: '15%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingVertical: 13,\n    },\n    titleContainer: {\n        width: '85%',\n        justifyContent: 'space-between',\n        flexDirection: \"row\",\n        alignItems: 'center',\n        borderBottomColor: Colors.placeHolderColor,\n        paddingVertical: 13,\n        paddingRight: 20,\n    },\n\ttitle: {\n\t\tfontFamily: 'mont-alt-regular',\n\t\tcolor: Colors.customBlack,\n\t\tfontSize: FontSizes.credText,\n\t},\n});\n\nexport default OptionsButton;\n"]},"metadata":{},"sourceType":"module"}