{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ikramgabiyev/react-native-workspace/loundr/screens/App/Profile/MyProfileScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport * as firebase from 'firebase';\nimport 'firebase/analytics';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar firebaseConfig = {\n  apiKey: 'AIzaSyABE5CrAEQivDkyppNM3f_2iw13IiV053c',\n  authDomain: 'loundr-fced9.firebaseapp.com',\n  databaseURL: 'https://loundr-fced9.firebaseio.com',\n  projectId: 'loundr-fced9',\n  storageBucket: 'loundr-fced9.appspot.com',\n  messagingSenderId: '28905429703',\n  appId: '1:28905429703:web:1cc5160bd2b907759d3ce2',\n  measurementId: 'G-BMV4TW6QFQ'\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nimport CustomScrollView from \"../../../components/CustomScrollView\";\nimport MinorButton from \"../../../components/MinorButton\";\nimport Avatar from \"../../../components/Avatar\";\nimport OptionsButton from \"../../../components/OptionsButton\";\nimport Colors from \"../../../constants/colors\";\nimport FontSizes from \"../../../constants/fontSizes\";\nvar DEFAULT_AVATAR_PATH = '../../../assets/avatar.jpg';\nvar AVATAR_WIDTH_HEIGHT = 80;\nvar CENTRAL_PANEL_WIDTH = '100%';\n\nvar MyProfileScreen = function (_Component) {\n  _inherits(MyProfileScreen, _Component);\n\n  var _super = _createSuper(MyProfileScreen);\n\n  function MyProfileScreen() {\n    var _this;\n\n    _classCallCheck(this, MyProfileScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      avatarSource: require(DEFAULT_AVATAR_PATH)\n    };\n\n    _this.openImagePickerAsync = function _callee() {\n      var permissionResult, pickerResult, fileName, permanentFilePath;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 2:\n              permissionResult = _context.sent;\n\n              if (!(permissionResult.granted === false)) {\n                _context.next = 6;\n                break;\n              }\n\n              Alert.alert('Access denied', 'You can grant access through settings later');\n              return _context.abrupt(\"return\");\n\n            case 6:\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n            case 8:\n              pickerResult = _context.sent;\n\n              if (!(pickerResult.cancelled === true)) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 11:\n              fileName = pickerResult.uri.split('/').pop();\n              permanentFilePath = FileSystem.documentDirectory + fileName;\n              _context.prev = 13;\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(FileSystem.moveAsync({\n                from: pickerResult.uri,\n                to: permanentFilePath\n              }));\n\n            case 16:\n              _this.setState({\n                avatarSource: {\n                  uri: permanentFilePath\n                }\n              });\n\n              _context.next = 23;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](13);\n              console.log(_context.t0);\n\n              _this.setState({\n                avatarSource: require(DEFAULT_AVATAR_PATH)\n              });\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[13, 19]], Promise);\n    };\n\n    _this.storeHighScore = function (userId, score) {\n      firebase.database().ref('users/' + userId).set({\n        highscore: score\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MyProfileScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(CustomScrollView, {\n        backgroundColor: Colors.backgroundGrey,\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 4\n        }\n      }, React.createElement(View, {\n        style: styles.photoPickerContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }\n      }, React.createElement(Avatar, {\n        source: this.state.avatarSource,\n        width: AVATAR_WIDTH_HEIGHT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      })), React.createElement(MinorButton, {\n        color: Colors.logoColor,\n        style: styles.pickPhotoBtn,\n        title: \"Pick a photo\",\n        onPress: this.openImagePickerAsync,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }\n      })), React.createElement(View, {\n        style: styles.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 5\n        }\n      }, React.createElement(OptionsButton, {\n        iconName: \"credit-card\",\n        title: \"Payment Methods\",\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('PaymentMethods');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }\n      }), React.createElement(OptionsButton, {\n        iconName: \"lock\",\n        title: \"Privacy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 6\n        }\n      }), React.createElement(OptionsButton, {\n        iconName: \"user\",\n        title: \"Edit Profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 6\n        }\n      }), React.createElement(OptionsButton, {\n        iconName: \"sign-out\",\n        title: \"Sign Out\",\n        isLast: true,\n        onPress: function onPress() {\n          return _this2.storeHighScore(4, 210);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 6\n        }\n      })));\n    }\n  }]);\n\n  return MyProfileScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  photoPickerContainer: {\n    width: CENTRAL_PANEL_WIDTH,\n    alignItems: 'center'\n  },\n  imageContainer: {\n    width: AVATAR_WIDTH_HEIGHT,\n    height: AVATAR_WIDTH_HEIGHT,\n    marginVertical: 30\n  },\n  options: {\n    width: CENTRAL_PANEL_WIDTH,\n    backgroundColor: Colors.customWhite,\n    marginVertical: 30,\n    borderBottomWidth: 1,\n    borderBottomColor: Colors.placeHolderColor,\n    borderTopWidth: 1,\n    borderTopColor: Colors.placeHolderColor\n  }\n});\nexport default MyProfileScreen;","map":{"version":3,"sources":["/Users/ikramgabiyev/react-native-workspace/loundr/screens/App/Profile/MyProfileScreen.js"],"names":["React","Component","ImagePicker","FileSystem","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","CustomScrollView","MinorButton","Avatar","OptionsButton","Colors","FontSizes","DEFAULT_AVATAR_PATH","AVATAR_WIDTH_HEIGHT","CENTRAL_PANEL_WIDTH","MyProfileScreen","state","avatarSource","require","openImagePickerAsync","requestCameraRollPermissionsAsync","permissionResult","granted","Alert","alert","launchImageLibraryAsync","pickerResult","cancelled","fileName","uri","split","pop","permanentFilePath","documentDirectory","moveAsync","from","to","setState","console","log","storeHighScore","userId","score","database","ref","set","highscore","backgroundGrey","styles","container","photoPickerContainer","imageContainer","logoColor","pickPhotoBtn","options","props","navigation","navigate","StyleSheet","create","alignItems","width","height","marginVertical","backgroundColor","customWhite","borderBottomWidth","borderBottomColor","placeHolderColor","borderTopWidth","borderTopColor"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAIA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,oBAAP;AACA,OAAO,mBAAP;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,IAAIC,cAAc,GAAG;AACpBC,EAAAA,MAAM,EAAE,yCADY;AAEpBC,EAAAA,UAAU,EAAE,8BAFQ;AAGpBC,EAAAA,WAAW,EAAE,qCAHO;AAIpBC,EAAAA,SAAS,EAAE,cAJS;AAKpBC,EAAAA,aAAa,EAAE,0BALK;AAMpBC,EAAAA,iBAAiB,EAAE,aANC;AAOpBC,EAAAA,KAAK,EAAE,0CAPa;AAQpBC,EAAAA,aAAa,EAAE;AARK,CAArB;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AACAD,QAAQ,CAACW,SAAT;AAGA,OAAOC,gBAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,aAAP;AAGA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,IAAMC,mBAAmB,GAAG,4BAA5B;AACA,IAAMC,mBAAmB,GAAG,EAA5B;AACA,IAAMC,mBAAmB,GAAG,MAA5B;;IAEMC,e;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,YAAY,EAAEC,OAAO,CAACN,mBAAD;AADd,K;;UAORO,oB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAES3B,WAAW,CAAC4B,iCAAZ,EAFT;;AAAA;AAEhBC,cAAAA,gBAFgB;;AAAA,oBAKlBA,gBAAgB,CAACC,OAAjB,KAA6B,KALX;AAAA;AAAA;AAAA;;AAMrBC,cAAAA,KAAK,CAACC,KAAN,CAAY,eAAZ,EAA6B,6CAA7B;AANqB;;AAAA;AAAA;AAAA,+CAWKhC,WAAW,CAACiC,uBAAZ,EAXL;;AAAA;AAWhBC,cAAAA,YAXgB;;AAAA,oBAclBA,YAAY,CAACC,SAAb,KAA2B,IAdT;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAqBhBC,cAAAA,QArBgB,GAqBLF,YAAY,CAACG,GAAb,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4BC,GAA5B,EArBK;AAyBhBC,cAAAA,iBAzBgB,GAyBIvC,UAAU,CAACwC,iBAAX,GAA+BL,QAzBnC;AAAA;AAAA;AAAA,+CA6BfnC,UAAU,CAACyC,SAAX,CAAqB;AAC1BC,gBAAAA,IAAI,EAAET,YAAY,CAACG,GADO;AAE1BO,gBAAAA,EAAE,EAAEJ;AAFsB,eAArB,CA7Be;;AAAA;AAmCrB,oBAAKK,QAAL,CAAc;AACbpB,gBAAAA,YAAY,EAAE;AACbY,kBAAAA,GAAG,EAAEG;AADQ;AADD,eAAd;;AAnCqB;AAAA;;AAAA;AAAA;AAAA;AA4CrBM,cAAAA,OAAO,CAACC,GAAR;;AACA,oBAAKF,QAAL,CAAc;AACbpB,gBAAAA,YAAY,EAAEC,OAAO,CAACN,mBAAD;AADR,eAAd;;AA7CqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAmDpB4B,c,GAAiB,UAACC,MAAD,EAASC,KAAT,EAAmB;AAChChD,MAAAA,QAAQ,CAACiD,QAAT,GAAoBC,GAApB,CAAwB,WAAWH,MAAnC,EAA2CI,GAA3C,CAA+C;AAC7CC,QAAAA,SAAS,EAAEJ;AADkC,OAA/C;AAGH,K;;;;;;;6BAEK;AAAA;;AACR,aACC,oBAAC,gBAAD;AAAkB,QAAA,eAAe,EAAEhC,MAAM,CAACqC,cAA1C;AAA0D,QAAA,KAAK,EAAEC,MAAM,CAACC,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,KAAKnC,KAAL,CAAWC,YAA3B;AAAyC,QAAA,KAAK,EAAEJ,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAFD,EAMC,oBAAC,WAAD;AACC,QAAA,KAAK,EAAEH,MAAM,CAAC0C,SADf;AAEC,QAAA,KAAK,EAAEJ,MAAM,CAACK,YAFf;AAGC,QAAA,KAAK,EAAC,cAHP;AAIC,QAAA,OAAO,EAAE,KAAKlC,oBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,CAFD,EAeC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE6B,MAAM,CAACM,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,aAAD;AACC,QAAA,QAAQ,EAAC,aADV;AAEC,QAAA,KAAK,EAAC,iBAFP;AAGC,QAAA,OAAO,EAAE,mBAAM;AACd,UAAA,MAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,gBAA/B;AACA,SALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAQC,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARD,EASC,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAC,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATD,EAUC,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAC,UAAzC;AAAoD,QAAA,MAAM,MAA1D;AACmB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACjB,cAAL,CAAoB,CAApB,EAAuB,GAAvB,CAAN;AAAA,SAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVD,CAfD,CADD;AAgCA;;;;EAlG4BjD,S;;AAqG9B,IAAMyD,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAChCV,EAAAA,SAAS,EAAE;AACVW,IAAAA,UAAU,EAAE;AADF,GADqB;AAIhCV,EAAAA,oBAAoB,EAAE;AACrBW,IAAAA,KAAK,EAAE/C,mBADc;AAErB8C,IAAAA,UAAU,EAAE;AAFS,GAJU;AAQhCT,EAAAA,cAAc,EAAE;AACfU,IAAAA,KAAK,EAAEhD,mBADQ;AAEfiD,IAAAA,MAAM,EAAEjD,mBAFO;AAGfkD,IAAAA,cAAc,EAAE;AAHD,GARgB;AAahCT,EAAAA,OAAO,EAAE;AACRO,IAAAA,KAAK,EAAE/C,mBADC;AAERkD,IAAAA,eAAe,EAAEtD,MAAM,CAACuD,WAFhB;AAGRF,IAAAA,cAAc,EAAE,EAHR;AAIRG,IAAAA,iBAAiB,EAAE,CAJX;AAKRC,IAAAA,iBAAiB,EAAEzD,MAAM,CAAC0D,gBALlB;AAMRC,IAAAA,cAAc,EAAE,CANR;AAORC,IAAAA,cAAc,EAAE5D,MAAM,CAAC0D;AAPf;AAbuB,CAAlB,CAAf;AAwBA,eAAerD,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, Alert } from 'react-native';\n\n//outside imports\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\n//firebase setup\nimport * as firebase from 'firebase';\nimport 'firebase/analytics';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar firebaseConfig = {\n\tapiKey: 'AIzaSyABE5CrAEQivDkyppNM3f_2iw13IiV053c',\n\tauthDomain: 'loundr-fced9.firebaseapp.com',\n\tdatabaseURL: 'https://loundr-fced9.firebaseio.com',\n\tprojectId: 'loundr-fced9',\n\tstorageBucket: 'loundr-fced9.appspot.com',\n\tmessagingSenderId: '28905429703',\n\tappId: '1:28905429703:web:1cc5160bd2b907759d3ce2',\n\tmeasurementId: 'G-BMV4TW6QFQ',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\n//components\nimport CustomScrollView from '../../../components/CustomScrollView';\nimport MinorButton from '../../../components/MinorButton';\nimport Avatar from '../../../components/Avatar';\nimport OptionsButton from '../../../components/OptionsButton';\n\n//constants\nimport Colors from '../../../constants/colors';\nimport FontSizes from '../../../constants/fontSizes';\nconst DEFAULT_AVATAR_PATH = '../../../assets/avatar.jpg';\nconst AVATAR_WIDTH_HEIGHT = 80; // the profile photo's side length (for borderRadius and uri photos)\nconst CENTRAL_PANEL_WIDTH = '100%';\n\nclass MyProfileScreen extends Component {\n\tstate = {\n\t\tavatarSource: require(DEFAULT_AVATAR_PATH),\n\t};\n\n\t/**\n\t * handling the click \"Pick a photo\"\n\t */\n\topenImagePickerAsync = async () => {\n\t\t//asking for permission if haven't asked already\n\t\tconst permissionResult = await ImagePicker.requestCameraRollPermissionsAsync();\n\n\t\t//if permission not granted - stop the function\n\t\tif (permissionResult.granted === false) {\n\t\t\tAlert.alert('Access denied', 'You can grant access through settings later');\n\t\t\treturn;\n\t\t}\n\n\t\t//open the Camera Roll and store user's choice\n\t\tconst pickerResult = await ImagePicker.launchImageLibraryAsync();\n\n\t\t//if the user did not pick anything - stop the function\n\t\tif (pickerResult.cancelled === true) {\n\t\t\treturn;\n\t\t}\n\n\t\t//if the user picked an image\n\t\t//store its initial uri - position in the cache\n\t\t//to get the name of the file\n\t\tconst fileName = pickerResult.uri.split('/').pop();\n\n\t\t//create a path with that file name in the document directory\n\t\t//which is a permanent local memry of the app on the phone\n\t\tconst permanentFilePath = FileSystem.documentDirectory + fileName;\n\n\t\t//if no errors move the image from cache to permanent storage\n\t\ttry {\n\t\t\tawait FileSystem.moveAsync({\n\t\t\t\tfrom: pickerResult.uri,\n\t\t\t\tto: permanentFilePath,\n\t\t\t});\n\n\t\t\t//update the state and the DB (later)\n\t\t\tthis.setState({\n\t\t\t\tavatarSource: {\n\t\t\t\t\turi: permanentFilePath,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t//also send it to DB\n\t\t} catch (err) {\n\t\t\t//if you got an error log it and use the avatar image from assets\n\t\t\tconsole.log(err);\n\t\t\tthis.setState({\n\t\t\t\tavatarSource: require(DEFAULT_AVATAR_PATH),\n\t\t\t});\n\t\t}\n\t};\n\n    storeHighScore = (userId, score) => {\n        firebase.database().ref('users/' + userId).set({\n          highscore: score\n        });\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<CustomScrollView backgroundColor={Colors.backgroundGrey} style={styles.container}>\n\t\t\t\t{/* container for the photo picking stuff */}\n\t\t\t\t<View style={styles.photoPickerContainer}>\n\t\t\t\t\t{/* the avatar container */}\n\t\t\t\t\t<View style={styles.imageContainer}>\n\t\t\t\t\t\t<Avatar source={this.state.avatarSource} width={AVATAR_WIDTH_HEIGHT} />\n\t\t\t\t\t</View>\n\t\t\t\t\t{/* \"pick the photo\" button */}\n\t\t\t\t\t<MinorButton\n\t\t\t\t\t\tcolor={Colors.logoColor}\n\t\t\t\t\t\tstyle={styles.pickPhotoBtn}\n\t\t\t\t\t\ttitle=\"Pick a photo\"\n\t\t\t\t\t\tonPress={this.openImagePickerAsync}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.options}>\n\t\t\t\t\t<OptionsButton\n\t\t\t\t\t\ticonName=\"credit-card\"\n\t\t\t\t\t\ttitle=\"Payment Methods\"\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tthis.props.navigation.navigate('PaymentMethods');\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<OptionsButton iconName=\"lock\" title=\"Privacy\" />\n\t\t\t\t\t<OptionsButton iconName=\"user\" title=\"Edit Profile\" />\n\t\t\t\t\t<OptionsButton iconName=\"sign-out\" title=\"Sign Out\" isLast \n                        onPress={() => this.storeHighScore(4, 210)}\n                    />\n\t\t\t\t</View>\n\t\t\t</CustomScrollView>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\talignItems: 'center',\n\t},\n\tphotoPickerContainer: {\n\t\twidth: CENTRAL_PANEL_WIDTH,\n\t\talignItems: 'center',\n\t},\n\timageContainer: {\n\t\twidth: AVATAR_WIDTH_HEIGHT,\n\t\theight: AVATAR_WIDTH_HEIGHT,\n\t\tmarginVertical: 30,\n\t},\n\toptions: {\n\t\twidth: CENTRAL_PANEL_WIDTH,\n\t\tbackgroundColor: Colors.customWhite,\n\t\tmarginVertical: 30,\n\t\tborderBottomWidth: 1,\n\t\tborderBottomColor: Colors.placeHolderColor,\n\t\tborderTopWidth: 1,\n\t\tborderTopColor: Colors.placeHolderColor,\n\t},\n});\n\nexport default MyProfileScreen;\n"]},"metadata":{},"sourceType":"module"}